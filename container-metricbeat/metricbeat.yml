#============================== Autodiscover ===================================
#metricbeat.autodiscover:
#  providers:
#    - type: docker
#      templates:
#        - condition:
#            contains:
#              docker.container.image: "elasticsearch"
#          config:
#            - module: elasticsearch
#              metricsets: ["node", "node_stats", "index", "index_recovery", "index_summary", "shard"]
#              period: 10s
#              hosts: ["${data.host}:9200"]
#    - type: docker
#      templates:
#        - condition:
#            contains:
#              docker.container.image: "beats"
#          config:
#            - module: beats
#              metricsets: ["stats", "state"]
#              period: 10s
#              hosts: ["${data.host}:5066"]
#    - type: docker
#      templates:
#        - condition:
#            contains:
#              docker.container.image: "kibana"
#          config:
#            - module: kibana
#              metricsets: ["status"]
#              period: 10s
#              hosts: ["${data.host}:5601"]
#              enabled: true
#    - type: docker
#      templates:
#        - condition:
#            contains:
#              docker.container.image: "logstash"
#          config:
#            - module: logstash
#              metricsets: ["node", "node_stats"]
#              period: 10s
#              hosts: ["${data.host}:9600"]
#              enabled: true

              #      templates:
              #        - condition:
              #            contains.docker.container.name: es-mtb01
              #          config:
              #            - module: beats
              #              metricsets: ["stats", "state"]
              #              period: 10s
              #              hosts: ["${host}:5066"]
              #      templates:
              #        - condition:
              #            contains.docker.container.name: es-mtb02
              #          config:
              #            - module: beats
              #              metricsets: ["stats", "state"]
              #              period: 10s
              #              hosts: ["${host}:5066"]
              #      templates:
              #        - condition:
              #            contains.docker.container.name: es-ftb
              #          config:
              #            - module: beats
              #              metricsets: ["stats", "state"]
              #              period: 10s
              #              hosts: ["${host}:5066"]
              #      templates:
              #        - condition:
              #            equals.docker.container.name: es-htb
              #          config:
              #            - module: beats
              #              metricsets: ["stats", "state"]
              #              period: 10s
              #              hosts: ["${host}:5066"]
#=========================== Timeseries instance ===============================
#timeseries.enabled: false

#==========================  Modules configuration =============================
#metricbeat.modules:
#--------------------------------- Beat Module ---------------------------------
#- module: beat
#  metricsets:
#    - stats
#    - state
#  period: 10s
#  hosts: ["es-htb:5066"]
  
#- module: beat
#  metricsets:
#    - stats
#    - state
#  period: 10s
#  hosts: ["es-ftb:5066"]
  
#- module: beat
#  metricsets:
#    - stats
#    - state
#  period: 10s
#  hosts: ["es-mtb02:5066"]
  
#- module: beat
#  metricsets:
#    - stats
#    - state
#  period: 10s
#  hosts: ["http://localhost:5069"]

  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
  #xpack.enabled: false

metricbeat.modules:
#-------------------------------- Docker Module --------------------------------
#- module: docker
  #metricsets:
    #- "container"
    #- "cpu"
    #- "diskio"
    #- "event"
    #- "healthcheck"
    #- "info"
    #- "image"
    #- "memory"
    #- "network"
  #hosts: ["unix:///var/run/docker.sock"]
  #period: 10s
  #enabled: true
  #labels.dedot: true
  #cpu.cores: true
  #ssl:
    #certificate_authority: "/etc/pki/root/ca.pem"
    #certificate:           "/etc/pki/client/cert.pem"
    #key:                   "/etc/pki/client/cert.key"

#---------------------------- Elasticsearch Module ----------------------------
#- module: elasticsearch
#  metricsets:
#    - node
#    - node_stats
#    - index
#    - index_recovery
#    - index_summary
#    - shard
    #- ml_job
#  period: 10s
#  hosts: '["es-mt01:9200","es-mt02:9200","es-mt03:9200","es-cdn01:9200","es-cdn02:9200","es-data01:9200","es-data02:9200","es-data03:9200","es-ing01:9200"]'
  #hosts: ["http://es","http://172.18.0.60:12002","http://172.18.0.60:12003","http://172.18.0.60:12004","http://172.18.0.60:12005","http://172.18.0.60:12006","http://172.18.0.60:12007","http://172.18.0.60:12008","http://172.18.0.60:12009"]
  #username: "elastic"
  #password: "changeme"
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
  #index_recovery.active_only: true
  #xpack.enabled: false

#------------------------------- HAProxy Module -------------------------------
#- module: haproxy
  #metricsets: ["info", "stat"]
  #period: 10s
  #hosts: ["tcp://127.0.0.1:14567"]
  #enabled: true

#--------------------------------- HTTP Module ---------------------------------
#- module: http
  #metricsets:
  #  - json
  #period: 10s
  #hosts: ["localhost:80"]
  #namespace: "json_namespace"
  #path: "/"
  #body: ""
  #method: "GET"
  #username: "user"
  #password: "secret"
  #request.enabled: false
  #response.enabled: false
  #json.is_array: false
  #dedot.enabled: false

#- module: http
  #metricsets:
  #  - server
  #host: "localhost"
  #port: "8080"
  #enabled: false
  #paths:
  #  - path: "/foo"
  #    namespace: "foo"
  #    fields: # added to the the response in root. overwrites existing fields
  #      key: "value"

#-------------------------------- Kibana Module --------------------------------
#- module: kibana
#  metricsets: ["status"]
#  period: 10s
#  hosts: ["es-kib:5601"]
  #basepath: "/"
  #enabled: true
  #xpack.enabled: false

#------------------------------- Logstash Module -------------------------------
#- module: logstash
#  metricsets: ["node", "node_stats"]
#  enabled: true
#  period: 10s
#  hosts: ["es-idx:9600"]

#-------------------------------- MySQL Module --------------------------------
#- module: mysql
  #metricsets:
    #- "status"
  #  - "galera_status"
  #period: 10s
  #hosts: ["root:secret@tcp(127.0.0.1:3306)/"]
  #username: root
  #password: secret
  #raw: false

#-------------------------------- Nginx Module --------------------------------
#- module: nginx
  #metricsets: ["stubstatus"]
  #enabled: true
  #period: 10s
  #hosts: ["http://127.0.0.1"]
  #server_status_path: "server-status"

#------------------------------- PHP_FPM Module -------------------------------
#- module: php_fpm
  #metricsets:
  #- pool
  #- process
  #enabled: true
  #period: 10s
  #status_path: "/status"
  #hosts: ["localhost:8080"]

#------------------------------- RabbitMQ Module -------------------------------
#- module: rabbitmq
  #metricsets: ["node", "queue", "connection"]
  #enabled: true
  #period: 10s
  #hosts: ["localhost:15672"]
  #management_path_prefix: ""
  #username: guest
  #password: guest

#-------------------------------- Redis Module --------------------------------
- module: redis
  metricsets: ["info", "keyspace"]
  enabled: true
  period: 10s
  hosts: ["es-redis:6379"]
  timeout: 1s
  #fields:
  #  datacenter: west
  #network: tcp
  #maxconn: 10
  #processors:
  #  - include_fields:
  #      fields: ["beat", "metricset", "redis.info.stats"]
  password: Y&hZ&lgooHaW

#------------------------------- Traefik Module -------------------------------
#- module: traefik
#  metricsets: ["health"]
#  period: 10s
#  hosts: ["https://monitor.nanoit.kr/api:8578"]

#================================ General ======================================
name: LOG-MONITORING-SERVER
#tags: ["service-X", "web-tier"]
#fields:
#  env: staging
#fields_under_root: false
#queue:
  #mem:
    #events: 4096
    #flush.min_events: 2048
    #flush.timeout: 1s
  #spool:
    #file:
      #path: "${path.data}/spool.dat"
      #permissions: 0600
      #size: 100MiB
      #page_size: 4KiB
      #prealloc: true
    #write:
      #buffer_size: 1MiB
      #flush.timeout: 1s
      #flush.events: 16384
      #codec: cbor
    #read:
      #flush.timeout: 0s

#max_procs:

#================================ Processors ===================================
#processors:
#- include_fields:
#    fields: ["cpu"]
##- drop_fields:
##    fields: ["cpu.user", "cpu.system"]
#
##processors:
##- drop_event:
##    when:
##       equals:
##           http.code: 200
##processors:
##- rename:
##    fields:
##       - from: "a"
##         to: "b"
##processors:
##- dissect:
##    tokenizer: "%{key1} - %{key2}"
##    field: "message"
##    target_prefix: "dissect"
##processors:
##- add_cloud_metadata: ~
##processors:
##- add_locale:
##    format: offset
#processors:
#- add_docker_metadata:
#    host: "unix:///var/run/docker.sock"
#    match_fields: ["system.process.cgroup.id"]
#    match_pids: ["process.pid", "process.ppid"]
#    match_source: true
#    match_source_index: 4
##    match_short_id: false
##    cleanup_timeout: 60
##    labels.dedot: false
##    #ssl:
##    #  certificate_authority: "/etc/pki/root/ca.pem"
##    #  certificate:           "/etc/pki/client/cert.pem"
##    #  key:                   "/etc/pki/client/cert.key"
##processors:
##- add_docker_metadata: ~
##processors:
##- add_host_metadata:
##   netinfo.enabled: false
#processors:
#- add_process_metadata:
#    match_pids: ["system.process.ppid"]
#    target: system.process.parent
#processors:
#- decode_json_fields:
#    fields: ["field1", "field2", ...]
#    process_array: false
#    max_depth: 1
#    target: ""
#    overwrite_keys: false
#processors:
#- decompress_gzip_field:
#    from: "field1"
#    to: "field2"
#    ignore_missing: false
#    fail_on_error: true
#processors:
#- copy_fields:
#    fields:
#        - from: message
#          to: message_copied
#    fail_on_error: true
#    ignore_missing: false
#processors:
#- truncate_fields:
#    fields:
#      - message
#    max_bytes: 1024
#    fail_on_error: false
#    ignore_missing: true
#processors:
#- copy_fields:
#    fields:
#        - from: message
#          to: event.original
#    fail_on_error: false
#    ignore_missing: true
#- truncate_fields:
#    fields:
#      - event.original
#    max_bytes: 1024
#    fail_on_error: false
#    ignore_missing: true

#================================ Outputs ======================================
#------------------------------- Redis output ----------------------------------
output.redis:
  enabled: true
  codec.json:
    pretty: true
    #escape_html: false
  hosts: ["es-redis:6379"]
  key: metricbeat
  password: Y&hZ&lgooHaW
  db: 1
  datatype: list
  #worker: 1
  #loadbalance: true
  #timeout: 5s
  #max_retries: 3
  #backoff.init: 1s
  #backoff.max: 60s
  #bulk_max_size: 2048
  #proxy_url:
  #proxy_use_local_resolver: false
  #ssl.enabled: true
  #ssl.verification_mode: full
  #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
  #ssl.certificate: "/etc/pki/client/cert.pem"
  #ssl.key: "/etc/pki/client/cert.key"
  #ssl.key_passphrase: ''
  #ssl.cipher_suites: []
  #ssl.curve_types: []
  #ssl.renegotiation: never

#============================== Dashboards =====================================
#setup.dashboards.enabled: true
#setup.dashboards.directory: ${path.home}/kibana
#setup.dashboards.url:
#setup.dashboards.file:
#setup.dashboards.beat: metricbeat
#setup.dashboards.kibana_index: .kibana
#setup.dashboards.index:
#setup.dashboards.always_kibana: false
#setup.dashboards.retry.enabled: false
#setup.dashboards.retry.interval: 1s
#setup.dashboards.retry.maximum: 0

#============================== Template =====================================
#setup.template.enabled: true
#setup.template.name: "metricbeat-%{[agent.version]}"
#setup.template.pattern: "metricbeat-%{[agent.version]}-*"
#setup.template.fields: "${path.config}/fields.yml"
#setup.template.append_fields:
#- name: field_name
#  type: field_type
#setup.template.json.enabled: false
#setup.template.json.path: "${path.config}/template.json"
#setup.template.json.name: ""
#setup.template.overwrite: true
#setup.template.settings:
  #index:
    #number_of_shards: 6
    #codec: best_compression
    #number_of_routing_shards: 30
  #_source:
    #enabled: false

#================================ Logging ======================================
logging.level: info
#logging.selectors: ["*"]
#logging.to_stderr: true
#logging.to_syslog: true
#logging.to_eventlog: true
#logging.metrics.enabled: true
#logging.metrics.period: 30s
logging.to_files: true
logging.files:
  path: /usr/share/metricbeat/logs
  name: metricbeat
  keepfiles: 5
  permissions: 0644
  #rotateeverybytes: 10485760 # = 10MB
  #interval: 0
#logging.json: true

#================================ HTTP Endpoint ======================================
#http.enabled: true
#http.host: localhost
#http.port: 5066
